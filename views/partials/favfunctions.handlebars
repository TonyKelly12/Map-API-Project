<script type="text/javascript">
    var gridPhotoModel = function (photo) {
        console.log(photo);
        this.photo = ko.observable(photo);
    }

   var FavLocation = {
        title: ko.observable(),
        address: ko.observable(),
        phone: ko.observable(),
        favid: ko.observable(),
        photo: ko.observable(),
        savedLocations: ko.observableArray(),
        addLocation: function(){
            this.savedLocations.push(this.location());
        }
    };

    /*var LocationsViewModel = function (favlist2) {
        console.log(favlist2);
        

        function locationClick(location) {
            console.log('click event function is working ' + location)

        }
    };*/

    $(function () {
        event.preventDefault();
        var favList = [];
        $.ajax({
            url: '/index',
            method: 'GET',
            contentType: 'application/json',
            success: function (response) {
                response.favLocation.forEach(function (fav) {
                    var lat = fav.lat;
                    var lng = fav.lng;
                    var latlng = new google.maps.LatLng(lat, lng);
                    fav.latlng = latlng;
                    favList.push(fav);

                });
                var favTile = favList[1];
               
                console.log("test 1:fav list has " + favList.length + " items in it");
                getPlacesInfo(favList);
            }

        });
       

    });


    function getPlacesInfo(favList, location) {
        var innerHTML = document.getElementById('table');
        var service = new google.maps.places.PlacesService(innerHTML);
        var locaddress;
        var locphone;
        var loctitle;
        var id = 0;
        console.log("test:2 fav list has " + favList.length + " items in it");
        console.log(favList);


        for (i = 0; i < favList.length; i++) {


            var loc = favList[i];
            var favTile = favList[0];
            console.log(loc.markerID);

            service.getDetails({
                placeId: loc.markerID
            }, function (place, status) {
                if (status === google.maps.places.PlacesServiceStatus.OK) {

                    if (place.name) {
                        loctitle = place.name;
                    }

                    if (place.formatted_address) {
                        locaddress = place.formatted_address;
                    }
                    if (place.formatted_phone_number) {
                        locphone = place.formatted_phone_number;
                    }
                    if (place.photos) {
                        var photo = place.photos[0].getUrl(
                            { maxHeight: 500, maxWidth: 700 });
                    }
                    var location = {
                        title: loctitle,
                        address: locaddress,
                        phone: locphone,
                        photo: photo,
                        favid: id
                    }
                    id += 1;
                    FavLocation.title(location.title);
                    FavLocation.address(location.address);
                    FavLocation.phone(location.phone);
                    FavLocation.photo(location.photo);
                    FavLocation.favid(location.favid);
                    FavLocation.savedLocations.push(location);
                };
            });
        };

ko.applyBindings(FavLocation);
    };



function getPlacePhoto(photo) {
    ko.applyBindings(new gridPhotoModel(photo));
};                    
                    /*function getPlacePhoto(photo) {
                        console.log(favTile.markerID);
                        var innerHTML = document.getElementById('fav-photo');
                        var service = new google.maps.places.PlacesService(innerHTML);

                        service.getDetails({

                            placeId: favTile.markerID
                        }, function (place, status) {
                            if (status === google.maps.places.PlacesServiceStatus.OK) {
                                // Set the marker property on this infowindow so it isn't created again.
                                console.log(place);
                                if (place.photos) {
                                    var photo = place.photos[0].getUrl(
                                        { maxHeight: 500, maxWidth: 700 });

                                    
                                }


                            }

                        })


                    

                    function getFavList(list, favlist2) {
                        var favlist2 = [];
                        var innerHTML = document.getElementById('table');
                        var service = new google.maps.places.PlacesService(innerHTML);
                        var locaddress;
                        var locphone;
                        var loctitle;
                        var id = 0;
                        console.log("test:2 fav list has " + list.length + " items in it");
                        console.log(list);


                        for (i = 0; i < list.length; i++) {


                            var loc = list[i];
                            console.log(loc.markerID);

                            service.getDetails({
                                placeId: loc.markerID
                            }, function (place, status) {
                                if (status === google.maps.places.PlacesServiceStatus.OK) {
                                    // Set the marker property on this infowindow so it isn't created again.
                                    if (place.name) {
                                        loctitle = place.name;
                                    }

                                    if (place.formatted_address) {
                                        locaddress = place.formatted_address;
                                    }
                                    if (place.formatted_phone_number) {
                                        locphone = place.formatted_phone_number;
                                    }

                                    var location = {
                                        title: loctitle,
                                        address: locaddress,
                                        phone: locphone,
                                        favid: id
                                    }
                                    id += 1;

                                    favlocation(location);
                                    console.log("pushed location" + location)

                                }

                            });

                        };



                    } */

</script>